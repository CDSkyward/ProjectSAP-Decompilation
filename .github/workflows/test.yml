name: Build RSDKv4
on:
  push:
    branches:
      - windows
      - android

jobs:
  v4-windows:
    runs-on: self-hosted
    if: github.ref == 'refs/heads/windows' # Only run on windows branch
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1
      - name: Download and Install vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          cd vcpkg
          ./bootstrap-vcpkg.sh
          echo "VCPKG_ROOT=$(pwd)" >> $GITHUB_ENV
          echo "$VCPKG_ROOT" >> $GITHUB_PATH
      - name: Download libogg and libvorbis for easier includes
        run: |
          Invoke-WebRequest -Uri "https://ftp.osuosl.org/pub/xiph/releases/ogg/libogg-1.3.5.zip" -OutFile "libogg.zip"
          Expand-Archive -Path libogg.zip -DestinationPath ./dependencies/windows/
          Rename-Item ./dependencies/windows/libogg-1.3.5 libogg
          Invoke-WebRequest -Uri "https://ftp.osuosl.org/pub/xiph/releases/vorbis/libvorbis-1.3.7.zip" -OutFile "libvorbis.zip"
          Expand-Archive -Path libvorbis.zip -DestinationPath ./dependencies/windows/
          Rename-Item ./dependencies/windows/libvorbis-1.3.7 libvorbis
      - name: Download GLEW
        run: |
          Invoke-WebRequest -Uri "https://github.com/nigels-com/glew/releases/download/glew-2.2.0/glew-2.2.0-win32.zip" -OutFile "GLEW.zip"
          Expand-Archive -Path GLEW.zip -DestinationPath ./dependencies/windows/
          Rename-Item ./dependencies/windows/glew-2.2.0 glew
      - name: Download SDL2
        run: |
          Invoke-WebRequest -Uri "https://libsdl.org/release/SDL2-devel-2.0.14-VC.zip" -OutFile "SDL2.zip"
          Expand-Archive -Path SDL2.zip -DestinationPath ./dependencies/windows/
          Rename-Item ./dependencies/windows/SDL2-2.0.14 SDL2
      - name: Download Theora
        run: |
         Invoke-WebRequest -Uri "https://ftp.osuosl.org/pub/xiph/releases/theora/libtheora-1.1.1.zip" -OutFile "libtheora.zip"
          Expand-Archive -Path libtheora.zip -DestinationPath ./dependencies/all
          Rename-Item ./dependencies/all/libtheora-1.1.1 libtheora
      - name: Run vcpkg
        run: |
          ./vcpkg install libogg:x86-windows-static-md libvorbis:x86-windows-static-md libtheora:x86-windows-static-md
          ./vcpkg integrate install
      - name: Build RSDKv4
        run: |
          msbuild RSDKv4.sln /p:Configuration=Release /p:Platform=x86 /p:ForceImportBeforeCppTargets="$env:GITHUB_WORKSPACE/props/winactions.props"
      - name: Move artifacts
        run: |
          mkdir artifacts
          move ./build/Win32/Release/*.dll ./artifacts
          move ./build/Win32/Release/*.exe ./artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: v4-windows
          path: artifacts

  v4-windows-x64:
    runs-on: self-hosted
    if: github.ref == 'refs/heads/windows' # Only run on windows branch
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1
      - name: Download and Install vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          cd vcpkg
          ./bootstrap-vcpkg.sh
          echo "VCPKG_ROOT=$(pwd)" >> $GITHUB_ENV
          echo "$VCPKG_ROOT" >> $GITHUB_PATH
      - name: Download libogg and libvorbis for easier includes
        run: |
          Invoke-WebRequest -Uri "https://ftp.osuosl.org/pub/xiph/releases/ogg/libogg-1.3.5.zip" -OutFile "libogg.zip"
          Expand-Archive -Path libogg.zip -DestinationPath ./dependencies/windows/
          Rename-Item ./dependencies/windows/libogg-1.3.5 libogg
          Invoke-WebRequest -Uri "https://ftp.osuosl.org/pub/xiph/releases/vorbis/libvorbis-1.3.7.zip" -OutFile "libvorbis.zip"
          Expand-Archive -Path libvorbis.zip -DestinationPath ./dependencies/windows/
          Rename-Item ./dependencies/windows/libvorbis-1.3.7 libvorbis
      - name: Download GLEW
        run: |
          Invoke-WebRequest -Uri "https://github.com/nigels-com/glew/releases/download/glew-2.2.0/glew-2.2.0-win32.zip" -OutFile "GLEW.zip"
          Expand-Archive -Path GLEW.zip -DestinationPath ./dependencies/windows/
          Rename-Item ./dependencies/windows/glew-2.2.0 glew
      - name: Download SDL2
        run: |
          Invoke-WebRequest -Uri "https://libsdl.org/release/SDL2-devel-2.0.14-VC.zip" -OutFile "SDL2.zip"
          Expand-Archive -Path SDL2.zip -DestinationPath ./dependencies/windows/
          Rename-Item ./dependencies/windows/SDL2-2.0.14 SDL2
      - name: Download Theora
        run: |
         Invoke-WebRequest -Uri "https://ftp.osuosl.org/pub/xiph/releases/theora/libtheora-1.1.1.zip" -OutFile "libtheora.zip"
          Expand-Archive -Path libtheora.zip -DestinationPath ./dependencies/all
          Rename-Item ./dependencies/all/libtheora-1.1.1 libtheora
      - name: Run vcpkg
        run: |
          ./vcpkg install libogg:x64-windows-static-md libvorbis:x64-windows-static-md libtheora:x64-windows-static-md
          ./vcpkg integrate install
      - name: Build RSDKv4
        run: |
          msbuild RSDKv4.sln /p:Configuration=Release /p:Platform=x64 /p:ForceImportBeforeCppTargets="$env:GITHUB_WORKSPACE/props/winactions_x64.props"
      - name: Move artifacts
        run: |
          mkdir artifacts
          move ./build/x64/Release/*.dll ./artifacts
          move ./build/x64/Release/*.exe ./artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: v4-windows-x64
          path: artifacts

  v4-android:
    runs-on: self-hosted
    if: github.ref == 'refs/heads/android' # Only run on android branch
    steps:
      - name: Checkout repository Android
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1
      - name: Download and Install vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          cd vcpkg
          ./bootstrap-vcpkg.sh
          echo "VCPKG_ROOT=$(pwd)" >> $GITHUB_ENV
          echo "$VCPKG_ROOT" >> $GITHUB_PATH
      - name: Download libogg, libvorbis, and libtheora for easier includes
        run: |
          Invoke-WebRequest -Uri "https://ftp.osuosl.org/pub/xiph/releases/vorbis/libvorbis-1.3.7.zip" -OutFile "libvorbis.zip"
          Expand-Archive -Path libvorbis.zip -DestinationPath ./dependencies/android/
          Rename-Item ./dependencies/android/libvorbis-1.3.7 libvorbis
          Invoke-WebRequest -Uri "https://ftp.osuosl.org/pub/xiph/releases/ogg/libogg-1.3.5.zip" -OutFile "libogg.zip"
          Expand-Archive -Path libogg.zip -DestinationPath ./dependencies/android/app/jni/src/dependencies/android/
          Rename-Item ./dependencies/android/app/jni/src/dependencies/android/libogg-1.3.5 libogg
          Invoke-WebRequest -Uri "https://ftp.osuosl.org/pub/xiph/releases/theora/libtheora-1.1.1.zip" -OutFile "libtheora.zip"
          Expand-Archive -Path libtheora.zip -DestinationPath ./dependencies/android/app/jni/src/dependencies/android/
          Rename-Item ./dependencies/android/app/jni/src/dependencies/android/libtheora-1.1.1 libtheora
      - name: Run vcpkg
        run: |
          ./vcpkg install libogg:arm64-android libvorbis:arm64-android libtheora:arm64-android
          ./vcpkg integrate install
      - name: Build RSDKv4
        run: |
          msbuild RSDKv4.sln /p:Configuration=Release /p:Platform=arm64-android /p:ForceImportBeforeCppTargets="$env:GITHUB_WORKSPACE/props/android.props"
      - name: Move artifacts
        run: |
          mkdir artifacts
          move ./build/Android/Release/*.dll ./artifacts
          move ./build/Android/Release/*.apk ./artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: v4-android
          path: artifacts

  WZ_Ubuntu-Make:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install build-essential git libsdl2-dev libvorbis-dev libtheora-dev libogg-dev libvorbis-dev libglew-dev
          ls ./dependencies/all
      - name: Build RSDKv4
        run: make
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: WZ+_linux-ubuntu
          path: bin

  WZ_Ubuntu-CMake:
    runs-on: self-hosted  # Changed from ubuntu-latest to self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install build-essential git libsdl2-dev libtheora-dev libogg-dev libvorbis-dev libglew-dev
      - name: Build WZ+ Ubuntu
        run: |
          cmake -B build ${{env.GENERAL_FLAGS}} ${{env.GENERAL_LINUX_FLAGS}}
          cmake --build build --parallel
      # tar the executables so that they don't lose exec permissions
      # see: https://github.com/actions/upload-artifact?tab=readme-ov-file#permission-loss
      - name: Move artifacts
        run: |
          mkdir -p build/RSDKv4
          mkdir artifacts
          mv ./build/RSDKv4* ./artifacts
          tar -czvf linux.tar.gz -C ./artifacts .
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: WZ+_Ubuntu
          path: linux.tar.gz
